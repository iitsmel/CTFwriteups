from Crypto.Util.number import inverse, long_to_bytes

c = 42325394862171011686610394082830152325773637014532441647187823931313400877228724638484081189474417718605541713268678100934429127174985753229215074456560234
n = 351267754916057434949859095305981271087770887773092330617417476358230661341804595705574580271467792437631663026167643354083453918504806426121885999031009309
e = 65537
p = 
q = 


phi = (p-1)*(q-1)

d = inverse(e, phi) #  inverse of e mod phi

m = pow(c, d, n) # (c^d) % n

print(long_to_bytes(m))